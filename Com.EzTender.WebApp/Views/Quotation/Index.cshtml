@model Com.BudgetMetal.ViewModels.Quotation.VmQuotationPage
@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="block-header">
    <h2>Quotation</h2>
</div>

<div class="row clearfix">
    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
        <div class="card">
            <div class="header">
                <h2>
                    List
                </h2>
            </div>
            <div class="body">

                <div class="row clearfix">
                    <table class="table table-striped">
                        <thead>
                            <tr>
                                <th></th>
                                <th>Document No</th>
                                <th>Company</th>
                                <th>Status</th>
                            </tr>
                        </thead>
                        <tbody>
                            @{
                                foreach (var item in Model.Result.Records)
                                {
                                    <tr>
                                        <td> <a type="button" class="btn btn-warning" href='@Url.Action("View","Quotation",new { id= item.Id })'>View</a>   <a type="button" class="btn btn-success" href='@Url.Action("Edit","Quotation",new { id= item.Id })'>Edit</a></td>
                                        <td>@item.Document.DocumentNo</td>
                                        <td>@item.Document.Company.Name</td>
                                        <td>@item.Document.DocumentStatus.Name</td>
                                    </tr>
                                }
                            }
                        </tbody>
                    </table>
                    <div class="row">
                        <div class="col-sm-12">
                            <div class="pagination pull-right" style="padding:10px;">
                                @{
                                    int currentPage = Model.Result.CurrentPage;
                                    int totalPage = Model.Result.TotalPage;
                                    int previousPage = Model.Result.PreviousPage;
                                    int nextPage = Model.Result.NextPage;

                                    if (previousPage > 0)
                                    {
                                        <a class='btn btn-md btn-default' href="?page=@previousPage"> < </a>
                                    }

                                    for (int i = 1; i <= totalPage; i++)
                                    {
                                        if (i == currentPage)
                                        {
                                            <a class='btn btn-md btn-default'> @i </a>

                                        }
                                        else
                                        {
                                            <a class='btn btn-md btn-default' href="?page=@i"> @i </a>

                                        }
                                    }

                                    if (nextPage > 0)
                                    {
                                        <a class='btn btn-md btn-default' href="?page=@nextPage"> > </a>
                                    }
                                }
                            </div>

                            <!-- pager -->
                            @if (Model.Result.TotalPage > 1)
                            {
                                <ul class="pagination">
                                    @if (Model.Result.CurrentPage > 1)
                                    {
                                        <li>
                                            <a href="~/Home/Index">First</a>
                                        </li>
                                        <li>
                                            <a href="~/Home/Index?page=@(Model.Result.CurrentPage - 1)">Previous</a>
                                        </li>
                                    }

                                    @for (var page = Model.Result.StartPage; page <= Model.Result.EndPage; page++)
                                    {
                                        <li class="@(page == Model.Result.CurrentPage ? "active" : "")">
                                            <a href="~/Home/Index?page=@page">@page</a>
                                        </li>
                                    }

                                    @if (Model.Result.CurrentPage < Model.Result.TotalPage)
                                    {
                                        <li>
                                            <a href="~/Home/Index?page=@(Model.Result.CurrentPage + 1)">Next</a>
                                        </li>
                                        <li>
                                            <a href="~/Home/Index?page=@(Model.Result.TotalPages)">Last</a>
                                        </li>
                                    }
                                </ul>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>