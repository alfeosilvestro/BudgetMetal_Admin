@model Com.BudgetMetal.ViewModels.Quotation.VmQuotationPage
@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="block-header">
    <h2>Quotation</h2>
</div>

<div class="row clearfix">
    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
        <div class="card">
            <div class="header">
                <h2>
                    List
                </h2>
            </div>
            <div class="body">
                @{
                    if (TempData["message"] != null)
                    {
                        <div class="alert alert-warning alert-dismissible" role="alert">
                            <button class="close" aria-label="Close" type="button" data-dismiss="alert"><span aria-hidden="true">×</span></button>
                            @TempData["message"]
                        </div>
                    }
                }
                <div class="row clearfix">
                    <table class="table table-striped">
                        <thead>
                            <tr>
                                <th></th>
                                <th>Quotation No</th>
                                <th>RFQ No</th>
                                <th>RFQ Closing Date</th>
                                <th>Company</th>
                                <th>Status</th>
                                @*<th>Summary</th>*@
                                <th class="align-right">Price</th>
                                <th>Quotation Updated Date</th>
                            </tr>
                        </thead>
                        <tbody>
                            @{
                                foreach (var item in Model.Result.Records)
                                {
                                    bool canShowList = false;
                                    string messageForQuotationList = "";
                                    if (item.Rfq.QuotationOpeningDate == null)
                                    {
                                        canShowList = true;
                                    }
                                    else
                                    {
                                        if (Convert.ToDateTime(item.Rfq.QuotationOpeningDate).Date <= DateTime.Now.Date)
                                        {
                                            int datediff = (DateTime.Now.Date - Convert.ToDateTime(item.Rfq.QuotationOpeningDate).Date).Days;
                                            messageForQuotationList = "Can View in " + datediff.ToString() + " Days.";
                                            canShowList = true;
                                        }
                                    }

                                    <tr>
                                        <td>
                                            @{
                                                if (canShowList)
                                                {
                                                    <a type="button" class="btn btn-warning" href='@Url.Action("View","Quotation",new { id= item.Id })'>View</a>
                                                }
                                                else
                                                {
                                                    <span class="text-danger">@messageForQuotationList</span>
                                                }
                                            }


                                        </td>
                                        <td>@item.Document.DocumentNo</td>
                                        <td>@item.Rfq.Document.DocumentNo</td>
                                        <td>@Html.DisplayFor(modelitem => item.Rfq.ValidRfqdate)</td>
                                        <td><a href="@Url.Action("Details","Companies", new { id = item.Document.Company.Id})" target="_blank"> @item.Document.Company.Name</a></td>
                                        <td>@item.Document.DocumentStatus.Name</td>
                                        @*<td>
                                            @{ 
                                                decimal productSubTotal = 0;
                                                decimal serviceSubTotal = 0;
                                                decimal warrantySubTotal = 0;
                                                var priceList = item.QuotationPriceSchedule;
                                                productSubTotal = priceList.Where(e => e.CategoryId == Com.BudgetMetal.Common.Constants_CodeTable.Code_RfqPriceCategory_Product).Select(e => e.ItemAmount).Sum();

                                                serviceSubTotal = priceList.Where(e => e.CategoryId == Com.BudgetMetal.Common.Constants_CodeTable.Code_RfqPriceCategory_Service).Select(e => e.ItemAmount).Sum();

                                                warrantySubTotal = priceList.Where(e => e.CategoryId == Com.BudgetMetal.Common.Constants_CodeTable.Code_RfqPriceCategory_Warranty).Select(e => e.ItemAmount).Sum();
                                                decimal allTotal = productSubTotal + serviceSubTotal + warrantySubTotal;
                                            }
                                            <table>
                                                <tr>
                                                    <td>
                                                        Product:
                                                    </td>
                                                    <td>
                                                       $ @productSubTotal
                                                    </td>
                                                </tr>
                                                <tr>
                                                    <td>
                                                        Service:
                                                    </td>
                                                    <td>
                                                        $  @serviceSubTotal
                                                    </td>
                                                </tr>
                                                <tr>
                                                    <td>
                                                        Warranty:
                                                    </td>
                                                    <td>
                                                        $ @warrantySubTotal
                                                    </td>
                                                </tr>
                                                <tr>
                                                    <td>
                                                        <strong>Total</strong>
                                                    </td>
                                                    <td>
                                                        $ @allTotal
                                                    </td>
                                                </tr>
                                            </table>
                                            
                                        </td>*@
                                        <td class="align-right">@item.QuotedFigure</td>
                                        <td>@Html.DisplayFor(modelitem => item.Document.UpdatedDate)</td>
                                    </tr>
                                }
                            }
                        </tbody>
                    </table>
                    <div class="row">
                        <div class="col-sm-12">
                            @if (Model.Result.TotalPage > 1)
                            {
                                int currentPage = Model.Result.CurrentPage;
                                int totalPage = Model.Result.TotalPage;
                                int previousPage = Model.Result.PreviousPage;
                                int nextPage = Model.Result.NextPage;

                                var startPage = currentPage - 5;
                                var endPage = currentPage + 4;
                                if (currentPage < 6)
                                {
                                    startPage = 1;
                                }
                                if (totalPage < endPage)
                                {
                                    endPage = totalPage;
                                }
                                <ul class="pagination">
                                    @if (Model.Result.CurrentPage > 1)
                                    {
                                        <li>
                                            <a href="?page=1">First</a>
                                        </li>
                                        <li>
                                            <a href="?page=@(Model.Result.CurrentPage - 1)">Previous</a>
                                        </li>
                                    }

                                    @for (var page = startPage; page <= endPage; page++)
                                    {
                                        <li class="@(page == currentPage ? "active" : "")">
                                            <a href="?page=@(page)"> @(page) </a>
                                        </li>
                                    }

                                    @if (currentPage < totalPage)
                                    {
                                        <li>
                                            <a href="?page=@(currentPage + 1)">Next</a>
                                        </li>
                                        <li>
                                            <a href="?page=@(totalPage)">Last</a>
                                        </li>
                                    }
                                </ul>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>